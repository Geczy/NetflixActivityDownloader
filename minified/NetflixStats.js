var script=document.createElement("script");script.type="application/javascript";script.src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js";document.getElementsByTagName("head")[0].appendChild(script);document.head.innerHTML+=`<style>h1{color:#000}#NetflixStats{padding-top:10px;text-align:center;position:absolute;width:95%;opacity:1;z-index:1;background:RGB(243,243,243)}.chart-container{width:600px;height:300px;text-align:center;margin-left:auto;margin-right:auto}</style>`;document.getElementsByClassName("bd")[0].innerHTML='<div id="NetflixStats"><h1>Gathering Stats</h1><br/><img height="100" width="100" src="https://thatguywiththatname.github.io/NetflixStats/source/images/loader.gif"></div>';document.getElementsByClassName("site-footer-wrapper")[0].innerHTML="";function getJSON(url,callback){var xmlhttp=new XMLHttpRequest();xmlhttp.onreadystatechange=function(){if(xmlhttp.readyState==4&&xmlhttp.status==200){try{var data=JSON.parse(xmlhttp.responseText);}catch(err){alert("Netflix Stats gathering failed, see console for details");console.warn(err.message+" in "+xmlhttp.responseText);return;}
callback(data);}};xmlhttp.open("GET",url,true);xmlhttp.send();}
var flixInfo=window.netflix.reactContext.models.serverDefs.data;var userInfo=window.netflix.reactContext.models.userInfo.data;var activityURL=flixInfo.SHAKTI_API_ROOT+"/"+flixInfo.BUILD_IDENTIFIER+"/viewingactivity?"+"authURL="+userInfo.authURL+"&pgSize=100"+"&pg=";console.log("using URL: "+activityURL);var flixStats={viewedItems:{},userDetails:{name:userInfo.name,guid:userInfo.guid,countryOfSignup:userInfo.countryOfSignup,currentCountry:userInfo.currentCountry,currentRegion:userInfo.currentRegion,membershipStatus:userInfo.membershipStatus,isInFreeTrial:userInfo.isInFreeTrial,isKids:userInfo.isKids}};var pageCount=0;function gatherWatchInfo(callback){console.log("Getting page "+pageCount);getJSON(activityURL+pageCount,(data)=>{if(data.viewedItems[0]===undefined){console.log("No viewed items in page\nFinished gathering pages");callback();}else{for(var i=0;i<data.viewedItems.length;i++){var episodeData=data.viewedItems[i];var generalTitle="unknown";var generalType="series";var generalID;if(episodeData.seriesTitle){generalTitle=episodeData.seriesTitle
generalID=episodeData.series;}else{generalType="film";generalTitle=episodeData.videoTitle
generalID=episodeData.movieID;}
if(generalType=="series"){var episodeObj={"title":episodeData.title,"dateWatched":episodeData.dateStr,"duration":episodeData.duration};}
if(!flixStats.viewedItems[generalID]){flixStats.viewedItems[generalID]={}
flixStats.viewedItems[generalID].title=generalTitle;flixStats.viewedItems[generalID].type=generalType;if(generalType=="series"){flixStats.viewedItems[generalID].watchCount=1;flixStats.viewedItems[generalID].watchedEpisodes={[episodeData.movieID]:episodeObj};}else{flixStats.viewedItems[generalID].dateWatched=episodeData.dateStr;flixStats.viewedItems[generalID].duration=episodeData.duration;}}else{flixStats.viewedItems[generalID].watchCount++;flixStats.viewedItems[generalID].watchedEpisodes[episodeData.movieID]=episodeObj;}}
pageCount++;gatherWatchInfo(callback);}});}
gatherWatchInfo(()=>{console.log("Done");console.log(flixStats);var nameToWatched={};var dateToWatched={};for(var itemID in flixStats.viewedItems){var item=flixStats.viewedItems[itemID]
if(item.type=="film"){nameToWatched[item.title]=item.duration;if(dateToWatched[item.dateWatched])dateToWatched[item.dateWatched]+=item.duration;else dateToWatched[item.dateWatched]=item.duration;}
else{nameToWatched[item.title]=0;for(var epID in item.watchedEpisodes){ep=item.watchedEpisodes[epID];nameToWatched[item.title]+=ep.duration;if(dateToWatched[ep.dateWatched])dateToWatched[ep.dateWatched]+=ep.duration;else dateToWatched[ep.dateWatched]=ep.duration;}}}
var mostWatchedDateTime=-Infinity;var mostWatchedDate="unknown";for(date in dateToWatched){if(dateToWatched[date]>mostWatchedDateTime){mostWatchedDateTime=dateToWatched[date];mostWatchedDate=date;}}
var totalSecondsWatched=0;for(var property in nameToWatched)totalSecondsWatched+=nameToWatched[property];var top5Times=[];var top5Names=Object.keys(nameToWatched).sort(function(a,b){return nameToWatched[a]-nameToWatched[b]});top5Names=top5Names.slice(-5).reverse();for(var index in top5Names){top5Times.push((nameToWatched[top5Names[index]])/60);}
var NetflixStatsObject=document.getElementById("NetflixStats");NetflixStatsObject.innerHTML=`<h1>Netflix Stats for ${flixStats.userDetails.name}</h1> <p> Amount of different films / series viewed: ${Object.keys(flixStats.viewedItems).length} <br> <br> Total time spent watching netflix: ${Math.round(totalSecondsWatched/60/60)} hours <br> <br> On ${mostWatchedDate} you watched a total of ${Math.round(mostWatchedDateTime/60/60)} hours of Netflix (<a href=https://github.com/thatguywiththatname/NetflixStats#notes--faq>?</a>) </p> <h2>Most Watched:</h2> <div class=chart-container> <canvas class=chart-contained id=topWatchedChart></canvas> </div> `;var topWatchedChartctx=document.getElementById("topWatchedChart").getContext("2d");var topWatchedChart=new Chart(topWatchedChartctx,{type:"bar",data:{labels:top5Names,datasets:[{label:"# of minutes watched",data:top5Times,backgroundColor:"rgba(299,9,20,0.2)",borderColor:"rgba(299,9,20,0.8)",borderWidth:1}]},options:{scales:{yAxes:[{ticks:{beginAtZero:true}}]},responsive:true,maintainAspectRatio:false}});});