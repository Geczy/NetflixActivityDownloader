javascript:function getJSON(a,b){var c=new XMLHttpRequest;c.onreadystatechange=function(){if(4==c.readyState&&200==c.status){try{var a=JSON.parse(c.responseText)}catch(a){return void alert(a.message+" in "+c.responseText)}b(a)}},c.open("GET",a,!0),c.send()}function downloadJSONToFile(b,c){b=JSON.stringify(b);var d=document.createElement("a"),a=new Blob([b],{type:"application/json"});d.href=URL.createObjectURL(a),d.download=c,d.click()}var apiInfo=window.netflix.reactContext.models.serverDefs.data,apiBase=apiInfo.API_BASE_URL,apiIdent=apiInfo.BUILD_IDENTIFIER,activityURL="https://"+apiInfo.host+"/api"+apiBase+"/"+apiIdent+"/viewingactivity?pg=";console.log("using URL: "+activityURL);let watchStats={};var pageCount=0;function gatherInfo(a){console.log("\nGetting: "+activityURL+pageCount),getJSON(activityURL+pageCount,b=>{if(b.viewedItems[0]===void 0)console.log("No viewed items in page\n\nFinished gathering pages"),a();else{for(var c=0;c<b.viewedItems.length;c++){var d=b.viewedItems[c],e="unknown",f="series";d.seriesTitle?e=d.seriesTitle:(e=d.videoTitle,f="film");var g={dateWatched:d.dateStr,duration:d.duration};watchStats[e]?(watchStats[e].watchCount++,watchStats[e].watches[d.title]=g):(watchStats[e]={},watchStats[e].type=f,watchStats[e].watchCount=1,watchStats[e].watches={[d.title]:g}),console.log("Parsed: "+e)}pageCount++,gatherInfo(a)}})}gatherInfo(()=>{console.log("\nDone\n"),console.log(watchStats),downloadJSONToFile(watchStats,"Netflix-Watch-Stats.json")});void 0